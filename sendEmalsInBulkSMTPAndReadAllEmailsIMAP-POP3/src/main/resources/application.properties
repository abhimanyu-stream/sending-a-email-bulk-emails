#Incoming Mail (POP/IMAP) Server
# BELOW IS SERVER CONFIGURATION #
# email-service Port
server.port=8288



# SMTP Server 
#Outgoing Mail (SMTP) Server
spring.mail.host=smtp.gmail.com
spring.mail.username=youremail@email.com
spring.mail.password=passwordyours
spring.mail.protocol=smtp
# TLS port 587
spring.mail.port=587
#Requires Authentication: Yes
spring.mail.properties.mail.smtp.auth=true
#Requires TLS: Yes (if available)
# TLS , port 587
#Port for TLS/STARTTLS: 587
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.socketFactory.port = 587
spring.mail.properties.mail.debug=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.transport.protocol=smtp
#TLS port
spring.mail.properties.mail.smtp.socketFactory.port=587

#When configuring the SSL protocol, we'll use TLS and tell the server to use TLS 1.2:
# SSL protocol to use
#server.ssl.protocol=TLS
# Enabled SSL protocols
#server.ssl.enabled-protocols=TLSv1.2



# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#Requires SSL: Yes
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory


sender.email=youremail@email.com










# Sender email address
spring.boot.admin.notify.mail.from=youremail@email.com
# Comma-delimited list of recipient email addresses
spring.boot.admin.notify.mail.to=youremail@email.com
#spring.boot.admin.notify.mail.to=youremail@email.com, youremail@email.com
# Comma-delimited list of carbon copy recipient email addresses
spring.boot.admin.notify.mail.cc=